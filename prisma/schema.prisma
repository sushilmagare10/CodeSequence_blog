generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String   @id @default(uuid()) @map("id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid()) @map("id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid()) @map("id")
  name          String?
  lastName      String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  role          String?  
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model VerificationToken {
  identifier String   @id @map("identifier")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String @id @default(uuid()) @map("id")
  slug        String @unique
  title       String
  img         String?
  posts       Post[]
}

model Post {
  id          String    @id @default(uuid()) @map("id")
  createdAt   DateTime  @default(now())
  slug        String    @unique
  excerpt     String?
  title       String
  img         String
  desc        String
  views       Int       @default(0)
  catSlug     String
  cat         Category  @relation(fields: [catSlug], references: [slug])
  userEmail   String
  user        User      @relation(fields: [userEmail], references: [email])
}
